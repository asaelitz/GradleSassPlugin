import groovy.swing.SwingBuilder

gradle.taskGraph.whenReady { taskGraph ->
    if (!taskGraph.allTasks.findAll { it.name ==~ /.*Sonatype.*/ }.isEmpty()) {
        String password = null

        if (System.console() == null) {
            new SwingBuilder().edt {
                dialog(modal: true,
                        title: 'Enter password',
                        alwaysOnTop: true,
                        resizable: false,
                        locationRelativeTo: null,
                        pack: true,
                        show: true
                ) {
                    vbox {
                        label(text: "Please enter key passphrase:")
                        input = passwordField()
                        button(defaultButton: true, text: 'OK', actionPerformed: {
                            password = new String(input.password)
                            dispose();
                        })
                    }
                }
            }
        } else {
            def passwordRaw = System.console().readPassword("\nPlease enter password: ")
            password = new String(passwordRaw)
        }

        signing {
            useGpgCmd()
        }

        project.publishing.repositories.each { repo ->
            repo.credentials.password = password
        }
    }
}

ext.fillPom = { org.gradle.api.publish.maven.MavenPom pom, String name, String description ->
    pom.withXml {

        asNode().with {
            // remove generated name and description
            ((List) children()).findAll { it.name() =~ /.*name/ }.each { it.replaceNode {} }
            ((List) children()).findAll { it.name() =~ /.*description/ }.each { it.replaceNode {} }

            appendNode('name', name)
            appendNode('description', description)
            appendNode('url', 'https://github.com/asaelitz/GradleSassPlugin/')

            appendNode('licenses').with {
                appendNode('license').with {
                    appendNode('name', 'Apache License, Version 2.0')
                    appendNode('url', 'https://www.apache.org/licenses/LICENSE-2.0.txt')
                }
            }

            appendNode('developers').with {
                appendNode('developer').with {
                    appendNode('name', 'Miroslav Kravec')
                    appendNode('email', 'kravec.miroslav@gmail.com')
                    appendNode('organization', null)
                }
            }

            appendNode('scm').with {
                appendNode('connection', 'scm:git:git://github.com/asaelitz/GradleSassPlugin.git')
                appendNode('developerConnection', 'scm:git:ssh://github.com:asaelitz/GradleSassPlugin.git')
                appendNode('url', 'http://github.com/asaelitz/GradleSassPlugin/tree/master')
            }
        }
    }
}
